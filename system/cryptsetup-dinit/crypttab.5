.TH "CRYPTTAB" "5" "2023\-09\-24" "cryptsetup" "cryptsetup manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
crypttab \- static information about encrypted filesystems
.SH "DESCRIPTION"
.sp
The file /etc/crypttab contains descriptive information about encrypted devices\&. crypttab is only read by init scripts, and not written; it is the duty of the system administrator to properly create and maintain this file\&. crypttab entries are treated sequentially, so their order matters (dependencies need to be listed first)\&.
.sp
Each encrypted device is described on a separate line\&. Fields on each line are separated by tabs or spaces\&. Lines starting with \*(Aq#\*(Aq are comments, and blank lines are ignored\&. Octal sequences \e0\fInum\fR within a field are decoded, which can be used for values containing spaces or special characters\&. A backslash which doesn\*(Aqt start an octal sequence yields undefined behavior\&.
.sp
The first field, \fItarget\fR, describes the mapped device name\&. It must be a plain filename without any directory components\&. A mapped device which encrypts/decrypts data to/from the \fIsource device\fR will be created at /dev/mapper/target by \fBcryptsetup\fR\&.
.sp
The second field, \fIsource device\fR, describes either the block special device or file that contains the encrypted data\&. Instead of giving the \fIsource device\fR explicitly, the UUID (resp\&. LABEL, PARTUUID and PARTLABEL) is supported as well, using \(lqUUID=<uuid>\(rq (resp\&. \(lqLABEL=<label>\(rq, \(lqPARTUUID=<partuuid>\(rq and \(lqPARTLABEL=<partlabel>\(rq)\&.
.sp
The third field, \fIkey file\fR, describes the file to use as a key for decrypting the data of the \fIsource device\fR\&. Note that the \fIentire\fR key file will be used as the passphrase; the passphrase must \fInot\fR be followed by a newline character\&.
.sp
It can also be a device name (e\&.g\&. /dev/urandom), note however that LUKS requires a persistent key and therefore does \fInot\fR support random data keys\&.
.sp
If the \fIkey file\fR is the string \fInone\fR or \fI-\fR, a passphrase will be read interactively from the console\&. In this case, the option tries may be useful\&.
.sp
The fourth field, \fIoptions\fR, is an optional comma\-separated list of options and/or flags describing the device type (\fIluks\fR, \fItcrypt\fR, \fIbitlk\fR, \fIfvault2\fR, or \fIplain\fR) and cryptsetup options associated with the encryption process\&. The supported options are described below\&. For plain dm\-crypt devices the \fIcipher\fR, \fIhash\fR and \fIsize\fR options are required\&. Some options can be changed on active mappings using \fBcryptsetup refresh [<options>] <name>\fR\&. Furthermore some options can be permanently written into metadata of LUKS2 headers using cryptsetup\*(Aqs \fI\-\-persistent\fR flag\&.
.sp
Note that the first three fields are required and that a missing field will lead to unspecified behaviour\&.
.SH "ON DIFFERENT CRYPTTAB FORMATS"
.sp
Please note that there are several independent cryptsetup wrappers with their own \fIcrypttab\fR format\&. This manpage covers Artix\*(Aqs implementation for \fIdinit\fR and \fIs6\fR service scripts\&. \fIOpenRC\fR doesn't read \fIcrypttab\fR but has an equivalent through /etc/conf.d/dmcrypt\&.
.SH "OPTIONS"
.PP
\fIcipher\fR=<cipher>
.RS 4
Encryption algorithm (ignored for non\-PLAIN devices)\&. See \fBcryptsetup \-c\fR\&.
.RE
.PP
\fIsize\fR=<size>
.RS 4
Encryption key size (ignored for non\-PLAIN devices)\&. See \fBcryptsetup \-s\fR\&.
.RE
.PP
\fIsector\-size\fR=<bytes>
.RS 4
Sector size\&. See \fBcryptsetup\fR(8) for possible values and the default value of this option\&.
.RE
.PP
\fIhash\fR=<hash>
.RS 4
Hash algorithm (ignored for non\-PLAIN devices)\&. See \fBcryptsetup \-h\fR\&.
.RE
.PP
\fIoffset\fR=<offset>
.RS 4
Start offset (ignored for non\-PLAIN devices)\&. Uses \fBcryptsetup \-o\fR\&.
.RE
.PP
\fIskip\fR=<skip>
.RS 4
Skip sectors at the beginning (ignored for non\-PLAIN devices)\&. Uses \fBcryptsetup \-p\fR\&.
.RE
.PP
\fIkeyfile\-offset\fR=<keyfile\-offset>
.RS 4
Specifies the number of bytes to skip at the start of the key file\&.
.RE
.PP
\fIkeyfile\-size\fR=<keyfile\-size>
.RS 4
Specifies the maximum number of bytes to read from the key file\&. The default is to read the whole file up to the compiled\-in maximum, that can be queried with \fBcryptsetup \-\-help\fR\&. This option is ignored for plain dm\-crypt devices, as the key file size is then given by the encryption key size (option \fIsize\fR)\&.
.RE
.PP
\fIkeyslot\fR=<slot>, \fIkey\-slot\fR=<slot>
.RS 4
Key slot (ignored for non\-LUKS devices)\&. See \fBcryptsetup \-S\fR\&.
.RE
.PP
\fIheader\fR=<path>
.RS 4
Detached header file (ignored for plain dm\-crypt devices)\&. See \fBcryptsetup \-\-header\fR\&.
.RE
.PP
\fIverify\fR
.RS 4
Verify password\&. Uses \fBcryptsetup \-y\fR\&.
.RE
.PP
\fIreadonly\fR, \fIread\-only\fR
.RS 4
Set up a read\-only mapping\.
.RE
.PP
\fItries\fR=<num>
.RS 4
Try to unlock the device <num> before failing\&. It\*(Aqs particularly useful when using a passphrase or a \fIkeyscript\fR that asks for interactive input\&. If you want to disable retries, pass \(lqtries=1\(rq\&. Default is \(lq3\(rq\&. Setting \(lqtries=0\(rq means infinitive retries\&.
.RE
.PP
\fIdiscard\fR
.RS 4
Allow using of discards (TRIM) requests for device\&.
.sp
If you don\*(Aqt care about leaking access patterns (filesystem type, used space) and don\*(Aqt have hidden truecrypt volumes inside this volume, then it should be safe to enable this option\&. See the following warning for further information\&.
.sp
\fBWARNING\fR: Assess the specific security risks carefully before enabling this option\&. For example, allowing discards on encrypted devices may lead to the leak of information about the ciphertext device (filesystem type, used space etc\&.) if the discarded blocks can be located easily on the device later\&.
.RE
.PP
\fIluks\fR
.RS 4
Force LUKS mode\&. When this mode is used, the following options are ignored since they are provided by the LUKS header on the device: \fIcipher=\fR, \fIhash=\fR, \fIsize=\fR
.RE
.PP
\fIplain\fR
.RS 4
Force plain encryption mode\&.
.RE
.PP
\fIbitlk\fR
.RS 4
Force BITLK (Windows BitLocker\-compatible) mode\&.
.sp
WARNING: \fIcrypttab\fR support is currently experimental\&.
.RE
.PP
\fIfvault2\fR
.RS 4
Force Apple\*(Aqs FileVault2 mode\&. Only the (legacy) FileVault2 format based on Core Storage and HFS+ filesystem (introduced in MacOS X 10\&.7 Lion) is currently supported; the new version of FileVault based on the APFS filesystem used in recent macOS versions is not supported\&.
.sp
WARNING: \fIcrypttab\fR support is currently experimental\&.
.RE
.PP
\fItcrypt\fR
.RS 4
Use TrueCrypt encryption mode\&. When this mode is used, the following options are ignored since they are provided by the TrueCrypt header on the device or do not apply: \fIcipher=\fR, \fIhash=\fR, \fIkeyfile\-offset=\fR, \fIkeyfile\-size=\fR, \fIsize=\fR
.sp
WARNING: \fIcrypttab\fR support is currently experimental\&.
.RE
.PP
\fIveracrypt\fR, \fItcrypt\-veracrypt\fR
.RS 4
Use VeraCrypt extension to TrueCrypt device\&. Only useful in conjunction with \fItcrypt\fR option (ignored for non\-TrueCrypt devices)\&.
.RE
.PP
\fItcrypthidden\fR, \fItcrypt\-hidden\fR
.RS 4
Use hidden TCRYPT header (ignored for non\-TCRYPT devices)\&.
.RE
.PP
\fIswap\fR
.RS 4
Run \fBmkswap\fR on the created device\&.
.RE
.SH "EXAMPLES"
.PP
.if n \{\
.RS 4
.\}
.nf
# Encrypted swap device
cswap /dev/sda6 /dev/urandom plain,cipher=aes\-xts\-plain64,size=256,hash=sha1,swap

# Encrypted LUKS disk with interactive password, identified by its UUID, discard enabled
cdisk0 UUID=12345678\-9abc\-def012345\-6789abcdef01 none luks,discard

# Encrypted TCRYPT disk with interactive password, discard enabled
tdisk0 /dev/sr0 none tcrypt,discard

# Encrypted ext4 disk with interactive password, discard enabled
# \- retry 5 times if the check fails
cdisk1 /dev/sda2 \- plain,cipher=aes\-xts\-plain64,size=256,hash=sha1,tries=5,discard

# Encrypted disk with interactive password, discard enabled
# \- no retries
cdisk2 /dev/sdc1 none plain,cipher=aes\-xts\-plain64,size=256,hash=sha1,tries=1,discard

# Encrypted disk with interactive password, discard enabled
# \- Twofish as the cipher, RIPEMD\-160 as the hash
cdisk3 /dev/sda3 none plain,cipher=twofish,size=256,hash=ripemd160,discard

.fi
.if n \{\
.RE
.\}
.sp
.SH "KNOWN UPGRADE ISSUES"
.sp
The upstream defaults for encryption cipher, hash and keysize have changed several times in the past, and they\*(Aqre expected to change again in future, for example if security issues arise\&. On LUKS devices, the used settings are stored in the LUKS header, and thus don\*(Aqt need to be configured in /etc/crypttab\&. For plain dm\-crypt devices, no information about used cipher, hash and keysize are available at all\&. Therefore we strongly suggest to configure the cipher, hash and keysize in /etc/crypttab for plain dm\-crypt devices, even if they match the current default\&.
.SH "SEE ALSO"
\fBcryptsetup\fR(8)
.SH "AUTHOR"
.sp
This manual page was originally written by Bastian Kleineidam <calvin@debian\&.org> for the Debian distribution of cryptsetup\&. and has been further improved by Michael Gebetsroither <michael\&.geb@gmx\&.at>, David Härdeman <david@hardeman\&.nu> and Jonas Meurer <jonas@freesources\&.org>\&. Further modifications has been made by Muhammad Herdiansyah <koni@artixlinux\&.org> to adapt it to Artix's current implementation of crypttab script\&.
.sp
NOTE: The original author originally licensed this manual page under GPL\-2\.0\-or\-later license\. Any modifications will follow the original license\.
