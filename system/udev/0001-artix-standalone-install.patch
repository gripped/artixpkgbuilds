From 8f016812da78f1b1d8999d9b500d60a2e4f04f88 Mon Sep 17 00:00:00 2001
From: artoo <artoo@artixlinux.org>
Date: Tue, 29 Aug 2023 17:46:28 +0200
Subject: [PATCH 1/1] artix standalone install

---
 factory/templates/meson.build |  2 ++
 hwdb.d/meson.build            | 12 ++++++++++++
 meson.build                   | 34 +++++++++++++++++++++++++++++++---
 rules.d/meson.build           |  4 +++-
 src/libudev/meson.build       |  9 ++++++++-
 src/udev/meson.build          | 18 +++++++++++++++++-
 src/udev/udevd.c              |  2 +-
 sysusers.d/meson.build        |  4 ++--
 tmpfiles.d/legacy.conf.in     |  3 ---
 tmpfiles.d/meson.build        | 14 +++++++++-----
 10 files changed, 85 insertions(+), 17 deletions(-)

diff --git a/factory/templates/meson.build b/factory/templates/meson.build
index a3ba7b166f..f165b9bdad 100644
--- a/factory/templates/meson.build
+++ b/factory/templates/meson.build
@@ -8,6 +8,7 @@ custom_target(
         output : 'locale.conf',
         command : [jinja2_cmdline, '@INPUT@', '@OUTPUT@'],
         install : true,
+        install_tag : 'tmpfiles',
         install_dir : factory_etc_dir)
 
 custom_target(
@@ -16,4 +17,5 @@ custom_target(
         output : 'vconsole.conf',
         command : [jinja2_cmdline, '@INPUT@', '@OUTPUT@'],
         install : true,
+        install_tag : 'tmpfiles',
         install_dir : factory_etc_dir)
diff --git a/hwdb.d/meson.build b/hwdb.d/meson.build
index 4c5df6ad70..3f20f836f9 100644
--- a/hwdb.d/meson.build
+++ b/hwdb.d/meson.build
@@ -44,10 +44,12 @@ if conf.get('ENABLE_HWDB') == 1
                 command : make_autosuspend_rules_py,
                 capture : true,
                 install : true,
+                install_tag : 'udev',
                 install_dir: udevhwdbdir)
 
         install_data(hwdb_files_notest,
                      hwdb_files_test,
+                     install_tag : 'udev',
                      install_dir : udevhwdbdir)
 
         if install_sysconfdir
@@ -58,6 +60,16 @@ if conf.get('ENABLE_HWDB') == 1
                                          'test -n "$DESTDIR" || @0@/systemd-hwdb update'.format(rootbindir))
         endif
 
+        if have_standalone_binaries
+                install_emptydir(
+                        sysconfdir / 'udev/hwdb.d',
+                        install_tag : 'udev')
+
+                meson.add_install_script('sh', '-c',
+                                         'test -n "$DESTDIR" || @0@/systemd-hwdb update'.format(rootbindir))
+        endif
+
+
         if want_tests != 'false'
                 parse_hwdb_py = find_program('parse_hwdb.py')
                 test('parse-hwdb',
diff --git a/meson.build b/meson.build
index 395eca1943..f5056aed33 100644
--- a/meson.build
+++ b/meson.build
@@ -158,6 +158,7 @@ rootpkglibdir = rootlibdir / 'systemd'
 
 install_sysconfdir = get_option('install-sysconfdir') != 'false'
 install_sysconfdir_samples = get_option('install-sysconfdir') == 'true'
+
 # Dirs of external packages
 pkgconfigdatadir = get_option('pkgconfigdatadir') != '' ? get_option('pkgconfigdatadir') : datadir / 'pkgconfig'
 pkgconfiglibdir = get_option('pkgconfiglibdir') != '' ? get_option('pkgconfiglibdir') : libdir / 'pkgconfig'
@@ -3152,6 +3153,14 @@ meson.add_install_script(meson_make_symlink,
                          rootbindir / 'udevadm',
                          rootlibexecdir / 'systemd-udevd')
 
+if have_standalone_binaries
+        install_symlink(
+                'udevd',
+                install_dir : rootbindir,
+                install_tag : 'udev',
+                pointing_to : rootbindir / 'udevadm')
+endif
+
 if conf.get('ENABLE_BACKLIGHT') == 1
         executable(
                 'systemd-backlight',
@@ -4075,7 +4084,7 @@ if enable_sysusers
         endif
 
         exe = executable(
-                'systemd-sysusers.standalone',
+                'esysusers',
                 'src/sysusers/sysusers.c',
                 include_directories : includes,
                 c_args : '-DSTANDALONE',
@@ -4087,6 +4096,7 @@ if enable_sysusers
                                 versiondep],
                 build_by_default: have_standalone_binaries,
                 install : have_standalone_binaries,
+                install_tag : 'sysusers',
                 install_dir : rootbindir)
         if have_standalone_binaries
                 public_programs += exe
@@ -4122,7 +4132,7 @@ if conf.get('ENABLE_TMPFILES') == 1
         endif
 
         exe = executable(
-                'systemd-tmpfiles.standalone',
+                'etmpfiles',
                 systemd_tmpfiles_sources,
                 include_directories : includes,
                 c_args : '-DSTANDALONE',
@@ -4135,6 +4145,7 @@ if conf.get('ENABLE_TMPFILES') == 1
                                 versiondep],
                 build_by_default: have_standalone_binaries,
                 install : have_standalone_binaries,
+                install_tag : 'tmpfiles',
                 install_dir : rootbindir)
         if have_standalone_binaries
                 public_programs += exe
@@ -4150,7 +4161,7 @@ endif
 
 if conf.get('ENABLE_HWDB') == 1
         systemd_hwdb = executable(
-                'systemd-hwdb',
+                'udev-hwdb',
                 'src/hwdb/hwdb.c',
                 include_directories : includes,
                 link_with : udev_link_with,
@@ -4158,6 +4169,7 @@ if conf.get('ENABLE_HWDB') == 1
                                 versiondep],
                 install_rpath : udev_rpath,
                 install : true,
+                install_tag : 'udev',
                 install_dir : rootbindir)
         public_programs += systemd_hwdb
 
@@ -4208,6 +4220,7 @@ udevadm = executable(
                         versiondep],
         install_rpath : udev_rpath,
         install : true,
+        install_tag : 'udev',
         install_dir : rootbindir)
 public_programs += udevadm
 
@@ -4704,6 +4717,21 @@ install_data('LICENSE.GPL2',
              'docs/UIDS-GIDS.md',
              install_dir : docdir)
 
+install_data('LICENSE.GPL2',
+             'LICENSE.LGPL2.1',
+             install_tag : 'udev',
+             install_dir : datadir / 'doc/udev')
+
+install_data('LICENSE.GPL2',
+             'LICENSE.LGPL2.1',
+             install_tag : 'sysusers',
+             install_dir : datadir / 'doc/esysusers')
+
+install_data('LICENSE.GPL2',
+             'LICENSE.LGPL2.1',
+             install_tag : 'tmpfiles',
+             install_dir : datadir / 'doc/etmpfiles')
+
 install_subdir('LICENSES',
                install_dir : docdir)
 
diff --git a/rules.d/meson.build b/rules.d/meson.build
index 20fca222da..afc4843f8e 100644
--- a/rules.d/meson.build
+++ b/rules.d/meson.build
@@ -2,6 +2,7 @@
 
 install_data(
         'README',
+        install_tag : 'udev',
         install_dir : udevrulesdir)
 
 rules = [
@@ -47,6 +48,7 @@ all_rules = []
 foreach tuple : rules
         if tuple.length() == 1 or tuple[1]
                 install_data(tuple[0],
+                install_tag : 'udev',
                              install_dir : udevrulesdir)
                 all_rules += tuple[0]
         endif
@@ -56,7 +58,6 @@ rules_in = [
         ['50-udev-default.rules'],
         ['60-persistent-storage.rules'],
         ['64-btrfs.rules'],
-        ['99-systemd.rules'],
 
         ['70-uaccess.rules',   enable_logind and conf.get('HAVE_ACL') == 1],
         ['71-seat.rules',      enable_logind],
@@ -74,6 +75,7 @@ foreach tuple : rules_in
                 output: tuple[0],
                 command : [jinja2_cmdline, '@INPUT@', '@OUTPUT@'],
                 install : want,
+                install_tag : 'udev',
                 install_dir : udevrulesdir)
 
         if want
diff --git a/src/libudev/meson.build b/src/libudev/meson.build
index 3787602a6b..77950cb2a6 100644
--- a/src/libudev/meson.build
+++ b/src/libudev/meson.build
@@ -23,6 +23,13 @@ libudev_sym_path = libudev_dir_path / 'libudev.sym'
 install_headers('libudev.h')
 libudev_h_path = libudev_dir_path / 'libudev.h'
 
+if have_standalone_binaries
+        install_data(
+                libudev_h_path,
+                install_dir: includedir,
+                install_tag: 'libudev-devel')
+endif
+
 libudev_basic = static_library(
         'udev-basic',
         libudev_sources,
@@ -40,7 +47,7 @@ libudev_pc = custom_target(
         output : 'libudev.pc',
         command : [jinja2_cmdline, '@INPUT@', '@OUTPUT@'],
         install : pkgconfiglibdir != 'no',
-        install_tag : 'devel',
+        install_tag : 'libudev-devel',
         install_dir : pkgconfiglibdir)
 
 ############################################################
diff --git a/src/udev/meson.build b/src/udev/meson.build
index 96f7930e9e..aeb5281abc 100644
--- a/src/udev/meson.build
+++ b/src/udev/meson.build
@@ -141,6 +141,7 @@ foreach prog : udev_progs
                 link_with : udev_link_with,
                 install_rpath : udev_rpath,
                 install : true,
+                install_tag : 'udev',
                 install_dir : udevlibexecdir)
 
         udev_prog_paths += {name : exe}
@@ -154,13 +155,22 @@ if install_sysconfdir_samples
                      install_dir : sysconfdir / 'udev')
 endif
 
+if have_standalone_binaries
+        install_data('udev.conf',
+                install_tag : 'udev',
+                install_dir : sysconfdir / 'udev')
+        install_data('iocost/iocost.conf',
+                install_tag : 'udev',
+                install_dir : sysconfdir / 'udev')
+endif
+
 udev_pc = custom_target(
         'udev.pc',
         input : 'udev.pc.in',
         output : 'udev.pc',
         command : [jinja2_cmdline, '@INPUT@', '@OUTPUT@'],
         install : pkgconfigdatadir != 'no',
-        install_tag : 'devel',
+        install_tag : 'udev-devel',
         install_dir : pkgconfigdatadir)
 
 if install_sysconfdir
@@ -168,6 +178,12 @@ if install_sysconfdir
                                  mkdir_p.format(sysconfdir / 'udev/rules.d'))
 endif
 
+if have_standalone_binaries
+        install_emptydir(
+                sysconfdir / 'udev/rules.d',
+                install_tag : 'udev')
+endif
+
 simple_fuzzers += files(
         'fuzz-udev-rule-parse-value.c',
 )
diff --git a/src/udev/udevd.c b/src/udev/udevd.c
index fe29dd94b3..01f7b9c092 100644
--- a/src/udev/udevd.c
+++ b/src/udev/udevd.c
@@ -2037,7 +2037,7 @@ int run_udevd(int argc, char *argv[]) {
         if (arg_daemonize) {
                 pid_t pid;
 
-                log_info("Starting systemd-udevd version " GIT_VERSION);
+                log_info("Starting udevd version " GIT_VERSION);
 
                 /* connect /dev/null to stdin, stdout, stderr */
                 if (log_get_max_level() < LOG_DEBUG) {
diff --git a/sysusers.d/meson.build b/sysusers.d/meson.build
index 608c4b744a..37bf31b4f1 100644
--- a/sysusers.d/meson.build
+++ b/sysusers.d/meson.build
@@ -8,7 +8,7 @@ foreach pair : files
         if not enable_sysusers
                 # do nothing
         elif pair[1] == '' or conf.get(pair[1]) == 1
-                install_data(pair[0], install_dir : sysusersdir)
+                install_data(pair[0], install_tag : 'sysusers', install_dir : sysusersdir)
         else
                 message('Not installing sysusers.d/@0@ because @1@ is @2@'
                         .format(pair[0], pair[1], conf.get(pair[1], 0)))
@@ -22,7 +22,6 @@ endif
 
 
 in_files = [['basic.conf',            enable_sysusers],
-            ['systemd-journal.conf',  enable_sysusers],
             ['systemd-network.conf',  enable_sysusers and conf.get('ENABLE_NETWORKD') == 1],
             ['systemd-resolve.conf',  enable_sysusers and conf.get('ENABLE_RESOLVE') == 1],
             ['systemd-timesync.conf', enable_sysusers and conf.get('ENABLE_TIMESYNCD') == 1]]
@@ -35,5 +34,6 @@ foreach tuple : in_files
                 output: file,
                 command : [jinja2_cmdline, '@INPUT@', '@OUTPUT@'],
                 install : tuple[1],
+                install_tag : 'sysusers',
                 install_dir : sysusersdir)
 endforeach
diff --git a/tmpfiles.d/legacy.conf.in b/tmpfiles.d/legacy.conf.in
index 4f2c0d7c43..62e2ae0986 100644
--- a/tmpfiles.d/legacy.conf.in
+++ b/tmpfiles.d/legacy.conf.in
@@ -12,9 +12,6 @@
 
 d /run/lock 0755 root root -
 L /var/lock - - - - ../run/lock
-{% if CREATE_LOG_DIRS %}
-L /var/log/README - - - - ../..{{DOC_DIR}}/README.logs
-{% endif %}
 
 # /run/lock/subsys is used for serializing SysV service execution, and
 # hence without use on SysV-less systems.
diff --git a/tmpfiles.d/meson.build b/tmpfiles.d/meson.build
index 4d94e3743f..f81a6cde96 100644
--- a/tmpfiles.d/meson.build
+++ b/tmpfiles.d/meson.build
@@ -4,14 +4,12 @@ enable_tmpfiles = conf.get('ENABLE_TMPFILES') == 1
 
 files = [['README',               ''],
          ['home.conf',            ''],
-         ['journal-nocow.conf',   ''],
          ['portables.conf',       'ENABLE_PORTABLED'],
          ['systemd-network.conf', 'ENABLE_NETWORKD'],
          ['systemd-nologin.conf', 'HAVE_PAM'],
          ['systemd-nspawn.conf',  'ENABLE_MACHINED'],
          ['systemd-pstore.conf',  'ENABLE_PSTORE'],
          ['systemd-resolve.conf', 'ENABLE_RESOLVE'],
-         ['systemd-tmp.conf',     ''],
          ['tmp.conf',             ''],
          ['x11.conf',             ''],
          ['provision.conf',       ''],
@@ -22,7 +20,7 @@ foreach pair : files
         if not enable_tmpfiles
                 # do nothing
         elif pair[1] == '' or conf.get(pair[1]) == 1
-                install_data(pair[0], install_dir : tmpfilesdir)
+                install_data(pair[0], install_tag : 'tmpfiles', install_dir : tmpfilesdir)
         else
                 message('Not installing tmpfiles.d/@0@ because @1@ is @2@'
                         .format(pair[0], pair[1], conf.get(pair[1], 0)))
@@ -30,9 +28,8 @@ foreach pair : files
 endforeach
 
 in_files = [['etc.conf',                      ''],
-            ['legacy.conf',                   'HAVE_SYSV_COMPAT'],
+            ['legacy.conf',                   ''],
             ['static-nodes-permissions.conf', ''],
-            ['systemd.conf',                  ''],
             ['var.conf',                      ''],
            ]
 
@@ -46,6 +43,7 @@ foreach pair : in_files
                         output: pair[0],
                         command : [jinja2_cmdline, '@INPUT@', '@OUTPUT@'],
                         install : enable_tmpfiles,
+                        install_tag : 'tmpfiles',
                         install_dir : tmpfilesdir)
         else
                 message('Not installing tmpfiles.d/@0@ because @1@ is @2@'
@@ -57,3 +55,9 @@ if enable_tmpfiles and install_sysconfdir
         meson.add_install_script(
                 'sh', '-c', mkdir_p.format(sysconfdir / 'tmpfiles.d'))
 endif
+
+if enable_tmpfiles and have_standalone_binaries
+        install_emptydir(
+                sysconfdir / 'tmpfiles.d',
+                install_tag : 'tmpfiles')
+endif
-- 
2.42.0

