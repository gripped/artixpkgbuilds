diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7f9d72ca7269e4c844466cf09f61e6c21596ae76..030466a29e67fb59a9ab1410987827adf4a2fede 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -240,11 +240,7 @@ if (LEGACY_BUILD)
             set(BUILD_SHARED_LIBS ${BUILD_SHARED_LIBS_PREV})
         endif ()
     else ()
-        # This is required in order to append /lib/cmake to each element in CMAKE_PREFIX_PATH
-        set(AWS_MODULE_DIR "/${CMAKE_INSTALL_LIBDIR}/cmake")
-        string(REPLACE ";" "${AWS_MODULE_DIR};" AWS_MODULE_PATH "${CMAKE_PREFIX_PATH}${AWS_MODULE_DIR}")
-        # Append that generated list to the module search path
-        list(APPEND CMAKE_MODULE_PATH ${AWS_MODULE_PATH})
+        find_package(aws-c-common REQUIRED)
         include(AwsFindPackage)
         set(IN_SOURCE_BUILD OFF)
     endif ()
diff --git a/tests/aws-cpp-sdk-core-tests/smithy/client/SmithyClientTest.cpp b/tests/aws-cpp-sdk-core-tests/smithy/client/SmithyClientTest.cpp
index 7f9d72ca7269e4c844466cf09f61e6c21596ae76..030466a29e67fb59a9ab1410987827adf4a2fede 100644
--- a/tests/aws-cpp-sdk-core-tests/smithy/client/SmithyClientTest.cpp
+++ b/tests/aws-cpp-sdk-core-tests/smithy/client/SmithyClientTest.cpp
@@ -241,7 +241,6 @@ TEST_F(SmithyClientTest, testSigV4) {
     auto res = ptr->SelectAuthSchemeOption(ctx);
 
     EXPECT_EQ(res.IsSuccess(), true);
-    std::cout<<"selected scheme id="<<res.GetResult().schemeId<<std::endl;
     EXPECT_EQ(res.GetResult().schemeId, key);
 
     Aws::String uri{"https://treasureisland-cb93079d-24a0-4862-8es2-88456ead.xyz.amazonaws.com"};
@@ -251,9 +250,6 @@ TEST_F(SmithyClientTest, testSigV4) {
     auto res2 = ptr->SignRequest(httpRequest, res.GetResult());
 
     EXPECT_EQ(res2.IsSuccess(), true);
-    
-    std::cout<<"Final auth="<<res2.GetResult()->GetAwsAuthorization()<<std::endl;
-
     EXPECT_EQ(res2.GetResult()->GetSigningAccessKey(), "dummyAccessId");
 
 
@@ -293,8 +289,6 @@ TEST_F(SmithyClientTest, testSigV4a) {
     auto res = ptr->SelectAuthSchemeOption(ctx);
 
     EXPECT_EQ(res.IsSuccess(), true);
-
-    std::cout<<"selected scheme id="<<res.GetResult().schemeId<<std::endl;
     EXPECT_EQ(res.GetResult().schemeId, key);
 
     Aws::String uri{"https://treasureisland-cb93079d-24a0-4862-8es2-88456ead.xyz.amazonaws.com"};
@@ -341,8 +335,6 @@ TEST_F(SmithyClientTest, bearer)
     auto res = ptr->SelectAuthSchemeOption(ctx);
 
     EXPECT_EQ(res.IsSuccess(), true);
-
-    std::cout << "selected scheme id=" << res.GetResult().schemeId << std::endl;
     EXPECT_EQ(res.GetResult().schemeId, key);
 
     Aws::String uri{
@@ -359,10 +351,6 @@ TEST_F(SmithyClientTest, bearer)
     EXPECT_EQ(res2.IsSuccess(), true);
 
     EXPECT_TRUE(!res2.GetResult()->GetHeaderValue("authorization").empty());
-
-    std::cout << "header=" << res2.GetResult()->GetHeaderValue("authorization")
-              << std::endl;
-
     EXPECT_EQ(res2.GetResult()->GetHeaderValue("authorization"),
               "Bearer testBearerToken");
 }
