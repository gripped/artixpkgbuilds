# Maintainer: Fabian Bornschein <fabiscafe@archlinux.org>
# Maintainer: Jan Alexander Steffens (heftig) <heftig@archlinux.org>

pkgbase=glycin
pkgname=(
  glycin
  glycin-gtk4
)
pkgver=2.0.0
pkgrel=4
pkgdesc="Sandboxed and extendable image decoding"
arch=(x86_64)
url="https://gitlab.gnome.org/GNOME/glycin"
license=('MPL-2.0 OR LGPL-2.1-or-later')
depends=(
  bubblewrap
  cairo
  fontconfig
  gcc-libs
  glib2
  glibc
  lcms2
  libjxl
  librsvg
  libseccomp
)
makedepends=(
  clang
  git
  gtk4
  gobject-introspection
  libheif
  meson
  rust
  vala
)
checkdepends=(
  dav1d
  ffmpeg
  rav1e
  svt-av1
)
source=(
  "git+$url.git#tag=${pkgver/[a-z]/.&}"
  "git+https://gitlab.gnome.org/sophie-h/test-images.git"
  0001-glycin-sandbox-Close-all-unused-FDs-in-fork.patch
)
b2sums=('31820d0b77ddc0f9151d033a82cb0b2def318915674983ca8e98f95676ed7c43072594989567fad14fbb2f2b0a9bb4fb2e9077acd62aabd7a49fccd7b9da6163'
        'SKIP'
        'ee23f172ab5af259788f16d15f1667f76f47ec5f2bd9450576b5d178aec5fee79836280f24a8318734b034d1d154a3b505c8ff4195c4a6af2ea5b47e4b37181a')

# Use debug
export CARGO_PROFILE_RELEASE_DEBUG=2 CARGO_PROFILE_RELEASE_STRIP=false

# Use LTO
export CARGO_PROFILE_RELEASE_LTO=true CARGO_PROFILE_RELEASE_CODEGEN_UNITS=1

prepare() {
  cd glycin

  # Sandboxing fixes to fix glycin in our build containers
  git cherry-pick -n 28005a815e8e6f8869006e5481fd8d77006ec8d1 \
                     294025c2b01903344513018c00166a35f2e1b3ce \
                     f202809ba2f5e95696ab03b6c0b16c0875f784a6

  # Fix avif/heic colors
  git cherry-pick -n 837721e873ac170deeae23e1186a5ad94450053d

  # Sandboxing fix to try to stop Firefox crashes
  git apply -3 ../0001-glycin-sandbox-Close-all-unused-FDs-in-fork.patch

  git submodule init
  git submodule set-url tests/test-images "$srcdir/test-images"
  git -c protocol.file.allow=always -c protocol.allow=never submodule update

  # Match cargo_home in meson.build
  CARGO_HOME="$srcdir/build/cargo-home" \
    cargo fetch --locked --target "$(rustc -vV | sed -n 's/host: //p')"
}

build() {
  local meson_options=(
  )

  artix-meson glycin build "${meson_options[@]}"
  meson compile -C build
}

check() {
  meson test -C build --print-errorlogs ||:
}

_pick() {
  local p="$1" f d; shift
  for f; do
    d="$srcdir/$p/${f#$pkgdir/}"
    mkdir -p "$(dirname "$d")"
    mv "$f" "$d"
    rmdir -p --ignore-fail-on-non-empty "$(dirname "$f")"
  done
}

package_glycin() {
  optdepends=(
    'libheif: Load .avif, .heic and .heif'
  )
  provides=(libglycin-2.so)

  meson install -C build --destdir "$pkgdir" --no-rebuild

  cd "$pkgdir"
  _pick gtk4 usr/include/glycin-gtk4-*
  _pick gtk4 usr/lib/girepository-1.0/GlyGtk4-*
  _pick gtk4 usr/lib/libglycin-gtk4-*
  _pick gtk4 usr/lib/pkgconfig/glycin-gtk4-*
  _pick gtk4 usr/share/gir-1.0/GlyGtk4-*
  _pick gtk4 usr/share/vala/vapi/glycin-gtk4-*
}

package_glycin-gtk4() {
  pkgdesc+=" - GTK4 integration"
  depends=(
    fontconfig
    gcc-libs
    glib2
    glibc
    glycin
    gtk4
    lcms2
    libseccomp
  )
  provides=(libglycin-gtk4-2.so)

  mv gtk4/* "$pkgdir"
}

# vim:set sw=2 sts=-1 et:
