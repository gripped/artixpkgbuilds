From 324c9e0ad360da1dc819b0134e1bda3956048b43 Mon Sep 17 00:00:00 2001
From: Greg Sjaardema <gsjaardema@gmail.com>
Date: Fri, 11 Jul 2025 09:34:37 -0600
Subject: [PATCH] IOSS: Update fmt library; use std::localtime instead of
 fmt::localtime

---
 packages/seacas/libraries/ioss/src/Ioss_Utils.C    |  8 ++++----
 .../seacas/libraries/ioss/src/cgns/Iocgns_Utils.C  |  4 ++--
 7 files changed, 16 insertions(+), 32 deletions(-)

diff --git a/packages/seacas/libraries/ioss/src/Ioss_Utils.C b/packages/seacas/libraries/ioss/src/Ioss_Utils.C
index 54c7e3f92c..eba6aee3f6 100644
--- a/packages/seacas/libraries/ioss/src/Ioss_Utils.C
+++ b/packages/seacas/libraries/ioss/src/Ioss_Utils.C
@@ -1,4 +1,4 @@
-// Copyright(C) 1999-2024 National Technology & Engineering Solutions
+// Copyright(C) 1999-2025 National Technology & Engineering Solutions
 // of Sandia, LLC (NTESS).  Under the terms of Contract DE-NA0003525 with
 // NTESS, the U.S. Government retains certain rights in this software.
 //
@@ -161,13 +161,13 @@ std::ostream &Ioss::Utils::get_debug_stream() { return *m_debugStream; }
 void Ioss::Utils::time_and_date(char *time_string, char *date_string, size_t length)
 {
   std::time_t t    = std::time(nullptr);
-  std::string time = fmt::format("{:%H:%M:%S}", fmt::localtime(t));
+  std::string time = fmt::format("{:%H:%M:%S}", *std::localtime(&t));
   std::string date;
   if (length >= 10) {
-    date = fmt::format("{:%Y/%m/%d}", fmt::localtime(t));
+    date = fmt::format("{:%Y/%m/%d}", *std::localtime(&t));
   }
   else {
-    date = fmt::format("{:%y/%m/%d}", fmt::localtime(t));
+    date = fmt::format("{:%y/%m/%d}", *std::localtime(&t));
   }
   copy_string(time_string, time, 9);
   copy_string(date_string, date, length + 1);
diff --git a/packages/seacas/libraries/ioss/src/cgns/Iocgns_Utils.C b/packages/seacas/libraries/ioss/src/cgns/Iocgns_Utils.C
index b6cdb6f796..94bb7924fb 100644
--- a/packages/seacas/libraries/ioss/src/cgns/Iocgns_Utils.C
+++ b/packages/seacas/libraries/ioss/src/cgns/Iocgns_Utils.C
@@ -1051,8 +1051,8 @@ size_t Iocgns::Utils::common_write_metadata(int file_ptr, const Ioss::Region &re
 
   CGERR(cg_goto(file_ptr, base, "end"));
   std::time_t t    = std::time(nullptr);
-  std::string date = fmt::format("{:%Y/%m/%d}", fmt::localtime(t));
-  std::string time = fmt::format("{:%H:%M:%S}", fmt::localtime(t));
+  std::string date = fmt::format("{:%Y/%m/%d}", *std::localtime(&t));
+  std::string time = fmt::format("{:%H:%M:%S}", *std::localtime(&t));
 
   std::string code_version = region.get_optional_property("code_version", "unknown");
   std::string code_name    = region.get_optional_property("code_name", "unknown");
