From 100395adcc65d163bbda44ef4ebba0ae2f683af6 Mon Sep 17 00:00:00 2001
From: johnnynunez <johnnynuca14@gmail.com>
Date: Tue, 2 Sep 2025 09:27:48 +0200
Subject: [PATCH 1/3] fix cuda 13

---
 src/cpp/cuda.hpp | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/src/cpp/cuda.hpp b/src/cpp/cuda.hpp
index 18079ab4..c734972d 100644
--- a/src/cpp/cuda.hpp
+++ b/src/cpp/cuda.hpp
@@ -859,13 +859,25 @@ namespace pycuda
     context::prepare_context_switch();
 
     CUcontext ctx;
-    CUDAPP_CALL_GUARDED_THREADED(cuCtxCreate, (&ctx, flags, m_device));
-    boost::shared_ptr<context> result(new context(ctx));
+    // CUDA 13+: cuCtxCreate now takes CUctxCreateParams*. Use the primary context instead.
+    // Try to apply requested flags if the primary context is currently inactive.
+    unsigned int pc_flags = 0; int pc_active = 0;
+    CUDAPP_CALL_GUARDED(cuDevicePrimaryCtxGetState, (&pc_flags, &pc_active, m_device));
+    if (!pc_active && flags != 0)
+      CUDAPP_CALL_GUARDED(cuDevicePrimaryCtxSetFlags, (m_device, flags));
+      CUDAPP_CALL_GUARDED_THREADED(cuDevicePrimaryCtxRetain, (&ctx, m_device));
+      CUDAPP_CALL_GUARDED_THREADED(cuCtxSetCurrent, (ctx));
+      boost::shared_ptr<context> result(new primary_context(ctx, m_device));
+    #else
+      CUDAPP_CALL_GUARDED_THREADED(cuCtxCreate, (&ctx, flags, m_device));
+      boost::shared_ptr<context> result(new context(ctx));
+    #endif
     context_stack::get().push(result);
     return result;
   }
 
 
+
 #if CUDAPP_CUDA_VERSION >= 7000
   inline boost::shared_ptr<context> device::retain_primary_context()
   {

From 9ee412fba0006a1e497c128601af3a4e18fd1b31 Mon Sep 17 00:00:00 2001
From: johnnynunez <johnnynuca14@gmail.com>
Date: Tue, 2 Sep 2025 09:36:37 +0200
Subject: [PATCH 2/3] fix cuda 13

---
 src/cpp/cuda.hpp | 28 ++++++++++++++--------------
 1 file changed, 14 insertions(+), 14 deletions(-)

diff --git a/src/cpp/cuda.hpp b/src/cpp/cuda.hpp
index c734972d..02e5511e 100644
--- a/src/cpp/cuda.hpp
+++ b/src/cpp/cuda.hpp
@@ -859,24 +859,24 @@ namespace pycuda
     context::prepare_context_switch();
 
     CUcontext ctx;
-    // CUDA 13+: cuCtxCreate now takes CUctxCreateParams*. Use the primary context instead.
-    // Try to apply requested flags if the primary context is currently inactive.
-    unsigned int pc_flags = 0; int pc_active = 0;
-    CUDAPP_CALL_GUARDED(cuDevicePrimaryCtxGetState, (&pc_flags, &pc_active, m_device));
-    if (!pc_active && flags != 0)
-      CUDAPP_CALL_GUARDED(cuDevicePrimaryCtxSetFlags, (m_device, flags));
-      CUDAPP_CALL_GUARDED_THREADED(cuDevicePrimaryCtxRetain, (&ctx, m_device));
-      CUDAPP_CALL_GUARDED_THREADED(cuCtxSetCurrent, (ctx));
-      boost::shared_ptr<context> result(new primary_context(ctx, m_device));
+    #if CUDAPP_CUDA_VERSION >= 13000
+        // CUDA 13+: cuCtxCreate now takes CUctxCreateParams*. Use the primary context instead.
+        // Try to apply requested flags if the primary context is currently inactive.
+        unsigned int pc_flags = 0; int pc_active = 0;
+        CUDAPP_CALL_GUARDED(cuDevicePrimaryCtxGetState, (&pc_flags, &pc_active, m_device));
+        if (!pc_active && flags != 0)
+          CUDAPP_CALL_GUARDED(cuDevicePrimaryCtxSetFlags, (m_device, flags));
+
+        CUDAPP_CALL_GUARDED_THREADED(cuDevicePrimaryCtxRetain, (&ctx, m_device));
+        CUDAPP_CALL_GUARDED_THREADED(cuCtxSetCurrent, (ctx));
+        boost::shared_ptr<context> result(new primary_context(ctx, m_device));
     #else
-      CUDAPP_CALL_GUARDED_THREADED(cuCtxCreate, (&ctx, flags, m_device));
-      boost::shared_ptr<context> result(new context(ctx));
+        CUDAPP_CALL_GUARDED_THREADED(cuCtxCreate, (&ctx, flags, m_device));
+        boost::shared_ptr<context> result(new context(ctx));
     #endif
     context_stack::get().push(result);
     return result;
-  }
-
-
+   }
 
 #if CUDAPP_CUDA_VERSION >= 7000
   inline boost::shared_ptr<context> device::retain_primary_context()

From 510985e5a91a4e7dd4bfc897b164797ff00c35db Mon Sep 17 00:00:00 2001
From: johnnynunez <johnnynuca14@gmail.com>
Date: Tue, 2 Sep 2025 09:55:12 +0200
Subject: [PATCH 3/3] fix cuda 13

---
 src/cpp/cuda.hpp | 28 ++++++++++++++++++----------
 1 file changed, 18 insertions(+), 10 deletions(-)

diff --git a/src/cpp/cuda.hpp b/src/cpp/cuda.hpp
index 02e5511e..568bc6d1 100644
--- a/src/cpp/cuda.hpp
+++ b/src/cpp/cuda.hpp
@@ -854,29 +854,37 @@ namespace pycuda
   };
 
   inline
-  boost::shared_ptr<context> device::make_context(unsigned int flags)
+boost::shared_ptr<context> device::make_context(unsigned int flags)
   {
     context::prepare_context_switch();
 
     CUcontext ctx;
     #if CUDAPP_CUDA_VERSION >= 13000
-        // CUDA 13+: cuCtxCreate now takes CUctxCreateParams*. Use the primary context instead.
-        // Try to apply requested flags if the primary context is currently inactive.
-        unsigned int pc_flags = 0; int pc_active = 0;
-        CUDAPP_CALL_GUARDED(cuDevicePrimaryCtxGetState, (&pc_flags, &pc_active, m_device));
-        if (!pc_active && flags != 0)
+        // CUDA 13+: avoid cuCtxCreate (now takes CUctxCreateParams*). Use primary context.
+        unsigned int pc_flags = 0;
+        int pc_active = 0;
+
+        // NOTE: argument order is (dev, &flags, &active)
+        CUDAPP_CALL_GUARDED(cuDevicePrimaryCtxGetState, (m_device, &pc_flags, &pc_active));
+
+        // If the primary context isnâ€™t active yet, set flags if requested
+        if (!pc_active && flags != 0 && pc_flags != flags)
           CUDAPP_CALL_GUARDED(cuDevicePrimaryCtxSetFlags, (m_device, flags));
 
+        // Retain + make current
         CUDAPP_CALL_GUARDED_THREADED(cuDevicePrimaryCtxRetain, (&ctx, m_device));
-        CUDAPP_CALL_GUARDED_THREADED(cuCtxSetCurrent, (ctx));
+        CUDAPP_CALL_GUARDED(cuCtxSetCurrent, (ctx));
+
         boost::shared_ptr<context> result(new primary_context(ctx, m_device));
     #else
+        // Older CUDA: original 3-arg cuCtxCreate still works
         CUDAPP_CALL_GUARDED_THREADED(cuCtxCreate, (&ctx, flags, m_device));
         boost::shared_ptr<context> result(new context(ctx));
     #endif
-    context_stack::get().push(result);
-    return result;
-   }
+
+        context_stack::get().push(result);
+        return result;
+  }
 
 #if CUDAPP_CUDA_VERSION >= 7000
   inline boost::shared_ptr<context> device::retain_primary_context()
