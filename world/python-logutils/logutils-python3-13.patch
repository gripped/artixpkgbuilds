diff -aur logutils-0.3.5.old/logutils/dictconfig.py logutils-0.3.5/logutils/dictconfig.py
--- logutils-0.3.5.old/logutils/dictconfig.py	2024-11-17 11:16:08.848147829 +0100
+++ logutils-0.3.5/logutils/dictconfig.py	2024-11-17 11:21:34.647864745 +0100
@@ -290,7 +290,7 @@
             raise ValueError("Unsupported version: %s" % config['version'])
         incremental = config.pop('incremental', False)
         EMPTY_DICT = {}
-        logging._acquireLock()
+        logging._prepareFork()
         try:
             if incremental:
                 handlers = config.get('handlers', EMPTY_DICT)
@@ -431,7 +431,7 @@
                         raise ValueError('Unable to configure root '
                                          'logger: %s' % e)
         finally:
-            logging._releaseLock()
+            logging._afterFork()
 
     def configure_formatter(self, config):
         """Configure a formatter from a dictionary."""
diff -aur logutils-0.3.5.old/tests/test_dictconfig.py logutils-0.3.5/tests/test_dictconfig.py
--- logutils-0.3.5.old/tests/test_dictconfig.py	2024-11-17 11:16:08.848147829 +0100
+++ logutils-0.3.5/tests/test_dictconfig.py	2024-11-17 11:20:59.847192950 +0100
@@ -39,7 +39,7 @@
         self.adapter = LoggerAdapter(l, {})
 
         logger_dict = logging.getLogger().manager.loggerDict
-        logging._acquireLock()
+        logging._prepareFork()
         try:
             self.saved_handlers = logging._handlers.copy()
             self.saved_handler_list = logging._handlerList[:]
@@ -50,7 +50,7 @@
                 self.saved_level_to_name = logging._levelToName.copy()
                 self.saved_name_to_level = logging._nameToLevel.copy()
         finally:
-            logging._releaseLock()
+            logging._afterFork()
 
         self.root_logger = logging.getLogger("")
         self.original_logging_level = self.root_logger.getEffectiveLevel()
@@ -58,7 +58,7 @@
 
     def tearDown(self):
         self.root_logger.setLevel(self.original_logging_level)
-        logging._acquireLock()
+        logging._prepareFork()
         try:
             if hasattr(logging, '_levelNames'):
                 logging._levelNames.clear()
@@ -75,7 +75,7 @@
             loggerDict.clear()
             loggerDict.update(self.saved_loggers)
         finally:
-            logging._releaseLock()
+            logging._afterFork()
 
     message_num = 0
 
