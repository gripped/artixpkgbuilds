diff --git a/CMakeLists.txt b/CMakeLists.txt
index c39db4a1c..c6bc7e73f 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -6,7 +6,7 @@ endif()
 project(openbabel)
 set(CMAKE_MODULE_PATH ${openbabel_SOURCE_DIR}/cmake/modules)
 
-set (CMAKE_CXX_STANDARD 11)
+set (CMAKE_CXX_STANDARD 14)
 
 if(COMMAND cmake_policy)
   cmake_policy(SET CMP0003 NEW)
@@ -457,7 +456,7 @@ include_directories(${openbabel_BINARY_DIR}/include
 
 #cjh
 find_package(Eigen3)
-if(EIGEN3_FOUND)
+if(Eigen3_FOUND)
   add_definitions(-DHAVE_EIGEN -DHAVE_EIGEN3)
   include_directories(${EIGEN3_INCLUDE_DIR})
 else()
diff --git a/include/CMakeLists.txt b/include/CMakeLists.txt
index eceb7aa1e..aa088feee 100644
--- a/include/CMakeLists.txt
+++ b/include/CMakeLists.txt
@@ -13,7 +13,7 @@ install(FILES ${openbabel_headers} DESTINATION ${OB_INCLUDE_DIRS}/openbabel)
 install(FILES ${math_headers}      DESTINATION ${OB_INCLUDE_DIRS}/openbabel/math)
 install(FILES ${stereo_headers}    DESTINATION ${OB_INCLUDE_DIRS}/openbabel/stereo)
 install(FILES ${depict_headers}    DESTINATION ${OB_INCLUDE_DIRS}/openbabel/depict)
-if(EIGEN2_FOUND OR EIGEN3_FOUND)
+if(EIGEN2_FOUND OR Eigen3_FOUND)
 install(FILES LBFGS.h              DESTINATION ${OB_INCLUDE_DIRS})
 install(FILES ${lbfgs_headers}     DESTINATION ${OB_INCLUDE_DIRS}/LBFGS)
 endif()
diff --git a/scripts/CMakeLists.txt b/scripts/CMakeLists.txt
index c01cacf6c..0e7b8944a 100644
--- a/scripts/CMakeLists.txt
+++ b/scripts/CMakeLists.txt
@@ -18,7 +18,7 @@ if (RUN_SWIG)
 endif (RUN_SWIG)
 
 # The following needs to be kept in synch with ..\CMakeLists.txt
-if(EIGEN3_FOUND)
+if(Eigen3_FOUND)
   set (eigen_define "-DHAVE_EIGEN" "-DHAVE_EIGEN3")
   include_directories(${EIGEN3_INCLUDE_DIR})
   set (CPPFLAGS_VALUE "-I${EIGEN3_INCLUDE_DIR}")
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index f505d6383..290302a60 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -15,7 +15,7 @@ set(charges
   charges/fromfile.cpp
 )
 
-if (EIGEN2_FOUND OR EIGEN3_FOUND)
+if (EIGEN2_FOUND OR Eigen3_FOUND)
 # if eigen is available, compile QEq, EQeq, and QTPIE charge models
 set(charges ${charges}
   charges/eqeq.cpp
@@ -58,7 +58,7 @@ set(math_srcs
   math/vector3.cpp
 )
 
-if(EIGEN2_FOUND OR EIGEN3_FOUND)
+if(EIGEN2_FOUND OR Eigen3_FOUND)
   set(math_srcs ${math_srcs}
     math/align.cpp
   )
@@ -89,7 +89,7 @@ set(ops
   ops/ophighlight.cpp
   ops/xout.cpp
 )
-if(EIGEN2_FOUND OR EIGEN3_FOUND)
+if(EIGEN2_FOUND OR Eigen3_FOUND)
   set(ops ${ops}
     ops/conformer.cpp
     ops/opalign.cpp
@@ -163,7 +163,7 @@ set(openbabel_srcs
   typer.cpp
   obmolecformat.cpp
 )
-if(EIGEN2_FOUND OR EIGEN3_FOUND)
+if(EIGEN2_FOUND OR Eigen3_FOUND)
   set(openbabel_srcs ${openbabel_srcs}
     conformersearch.cpp
     confsearch.cpp
diff --git a/test/CMakeLists.txt b/test/CMakeLists.txt
index 300718a2a..e39e9d8bc 100644
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -53,7 +53,7 @@ set (tetranonplanar_parts 1)
 set (tetraplanar_parts 1)
 set (uniqueid_parts 1 2)
 
-if (EIGEN2_FOUND OR EIGEN3_FOUND)
+if (EIGEN2_FOUND OR Eigen3_FOUND)
   set(cpptests
       align ${cpptests})
   set (align_parts 1 2 3 4 5)
diff --git a/tools/CMakeLists.txt b/tools/CMakeLists.txt
index 0115b82c2..a58ad9946 100644
--- a/tools/CMakeLists.txt
+++ b/tools/CMakeLists.txt
@@ -26,7 +26,7 @@ else(MINIMAL_BUILD)
         obtautomer
         obthermo
      )
-  if(EIGEN3_FOUND)
+  if(Eigen3_FOUND)
     set(tools
         ${tools}
         obdistgen
@@ -52,7 +52,7 @@ if(BUILD_SHARED)
   if(NOT MINIMAL_BUILD)
     # obgrep, obrms, obspectrophore -- require getopt
     set(toolnames obgrep obspectrophore)
-    if(EIGEN3_FOUND)
+    if(Eigen3_FOUND)
       set(toolnames ${toolnames} obrms)
     endif()
     foreach(tool ${toolnames})
diff --git a/cmake/modules/FindEigen2.cmake b/cmake/modules/FindEigen2.cmake
deleted file mode 100644
index da95bb0f5..000000000
--- a/cmake/modules/FindEigen2.cmake
+++ /dev/null
@@ -1,80 +0,0 @@
-# - Try to find Eigen2 lib
-#
-# This module supports requiring a minimum version, e.g. you can do
-#   find_package(Eigen2 2.0.3)
-# to require version 2.0.3 to newer of Eigen2.
-#
-# Once done this will define
-#
-#  EIGEN2_FOUND - system has eigen lib with correct version
-#  EIGEN2_INCLUDE_DIR - the eigen include directory
-#  EIGEN2_VERSION - eigen version
-
-# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>
-# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>
-# Redistribution and use is allowed according to the terms of the BSD license.
-
-if(NOT Eigen2_FIND_VERSION)
-  if(NOT Eigen2_FIND_VERSION_MAJOR)
-    set(Eigen2_FIND_VERSION_MAJOR 2)
-  endif(NOT Eigen2_FIND_VERSION_MAJOR)
-  if(NOT Eigen2_FIND_VERSION_MINOR)
-    set(Eigen2_FIND_VERSION_MINOR 0)
-  endif(NOT Eigen2_FIND_VERSION_MINOR)
-  if(NOT Eigen2_FIND_VERSION_PATCH)
-    set(Eigen2_FIND_VERSION_PATCH 0)
-  endif(NOT Eigen2_FIND_VERSION_PATCH)
-
-  set(Eigen2_FIND_VERSION "${Eigen2_FIND_VERSION_MAJOR}.${Eigen2_FIND_VERSION_MINOR}.${Eigen2_FIND_VERSION_PATCH}")
-endif(NOT Eigen2_FIND_VERSION)
-
-macro(_eigen2_check_version)
-  file(READ "${EIGEN2_INCLUDE_DIR}/Eigen/src/Core/util/Macros.h" _eigen2_version_header)
-
-  string(REGEX MATCH "define[ \t]+EIGEN_WORLD_VERSION[ \t]+([0-9]+)" _eigen2_world_version_match "${_eigen2_version_header}")
-  set(EIGEN2_WORLD_VERSION "${CMAKE_MATCH_1}")
-  string(REGEX MATCH "define[ \t]+EIGEN_MAJOR_VERSION[ \t]+([0-9]+)" _eigen2_major_version_match "${_eigen2_version_header}")
-  set(EIGEN2_MAJOR_VERSION "${CMAKE_MATCH_1}")
-  string(REGEX MATCH "define[ \t]+EIGEN_MINOR_VERSION[ \t]+([0-9]+)" _eigen2_minor_version_match "${_eigen2_version_header}")
-  set(EIGEN2_MINOR_VERSION "${CMAKE_MATCH_1}")
-
-  set(EIGEN2_VERSION ${EIGEN2_WORLD_VERSION}.${EIGEN2_MAJOR_VERSION}.${EIGEN2_MINOR_VERSION})
-  if(${EIGEN2_VERSION} VERSION_LESS ${Eigen2_FIND_VERSION})
-    set(EIGEN2_VERSION_OK FALSE)
-  else(${EIGEN2_VERSION} VERSION_LESS ${Eigen2_FIND_VERSION})
-    set(EIGEN2_VERSION_OK TRUE)
-  endif(${EIGEN2_VERSION} VERSION_LESS ${Eigen2_FIND_VERSION})
-
-  if(NOT EIGEN2_VERSION_OK)
-
-    message(STATUS "Eigen2 version ${EIGEN2_VERSION} found in ${EIGEN2_INCLUDE_DIR}, "
-                   "but at least version ${Eigen2_FIND_VERSION} is required")
-  endif(NOT EIGEN2_VERSION_OK)
-endmacro(_eigen2_check_version)
-
-if (EIGEN2_INCLUDE_DIR)
-
-  # in cache already
-  _eigen2_check_version()
-  set(EIGEN2_FOUND ${EIGEN2_VERSION_OK})
-
-else (EIGEN2_INCLUDE_DIR)
-
-find_path(EIGEN2_INCLUDE_DIR NAMES Eigen/Core
-     PATHS
-     ${INCLUDE_INSTALL_DIR}
-     ${KDE4_INCLUDE_DIR}
-     PATH_SUFFIXES eigen2
-   )
-
-if(EIGEN2_INCLUDE_DIR)
-  _eigen2_check_version()
-endif(EIGEN2_INCLUDE_DIR)
-
-include(FindPackageHandleStandardArgs)
-find_package_handle_standard_args(Eigen2 DEFAULT_MSG EIGEN2_INCLUDE_DIR EIGEN2_VERSION_OK)
-
-mark_as_advanced(EIGEN2_INCLUDE_DIR)
-
-endif(EIGEN2_INCLUDE_DIR)
-
diff --git a/cmake/modules/FindEigen3.cmake b/cmake/modules/FindEigen3.cmake
deleted file mode 100644
index 9c546a05d..000000000
--- a/cmake/modules/FindEigen3.cmake
+++ /dev/null
@@ -1,81 +0,0 @@
-# - Try to find Eigen3 lib
-#
-# This module supports requiring a minimum version, e.g. you can do
-#   find_package(Eigen3 3.1.2)
-# to require version 3.1.2 or newer of Eigen3.
-#
-# Once done this will define
-#
-#  EIGEN3_FOUND - system has eigen lib with correct version
-#  EIGEN3_INCLUDE_DIR - the eigen include directory
-#  EIGEN3_VERSION - eigen version
-
-# Copyright (c) 2006, 2007 Montel Laurent, <montel@kde.org>
-# Copyright (c) 2008, 2009 Gael Guennebaud, <g.gael@free.fr>
-# Copyright (c) 2009 Benoit Jacob <jacob.benoit.1@gmail.com>
-# Redistribution and use is allowed according to the terms of the 2-clause BSD license.
-
-if(NOT Eigen3_FIND_VERSION)
-  if(NOT Eigen3_FIND_VERSION_MAJOR)
-    set(Eigen3_FIND_VERSION_MAJOR 2)
-  endif(NOT Eigen3_FIND_VERSION_MAJOR)
-  if(NOT Eigen3_FIND_VERSION_MINOR)
-    set(Eigen3_FIND_VERSION_MINOR 91)
-  endif(NOT Eigen3_FIND_VERSION_MINOR)
-  if(NOT Eigen3_FIND_VERSION_PATCH)
-    set(Eigen3_FIND_VERSION_PATCH 0)
-  endif(NOT Eigen3_FIND_VERSION_PATCH)
-
-  set(Eigen3_FIND_VERSION "${Eigen3_FIND_VERSION_MAJOR}.${Eigen3_FIND_VERSION_MINOR}.${Eigen3_FIND_VERSION_PATCH}")
-endif(NOT Eigen3_FIND_VERSION)
-
-macro(_eigen3_check_version)
-  file(READ "${EIGEN3_INCLUDE_DIR}/Eigen/src/Core/util/Macros.h" _eigen3_version_header)
-
-  string(REGEX MATCH "define[ \t]+EIGEN_WORLD_VERSION[ \t]+([0-9]+)" _eigen3_world_version_match "${_eigen3_version_header}")
-  set(EIGEN3_WORLD_VERSION "${CMAKE_MATCH_1}")
-  string(REGEX MATCH "define[ \t]+EIGEN_MAJOR_VERSION[ \t]+([0-9]+)" _eigen3_major_version_match "${_eigen3_version_header}")
-  set(EIGEN3_MAJOR_VERSION "${CMAKE_MATCH_1}")
-  string(REGEX MATCH "define[ \t]+EIGEN_MINOR_VERSION[ \t]+([0-9]+)" _eigen3_minor_version_match "${_eigen3_version_header}")
-  set(EIGEN3_MINOR_VERSION "${CMAKE_MATCH_1}")
-
-  set(EIGEN3_VERSION ${EIGEN3_WORLD_VERSION}.${EIGEN3_MAJOR_VERSION}.${EIGEN3_MINOR_VERSION})
-  if(${EIGEN3_VERSION} VERSION_LESS ${Eigen3_FIND_VERSION})
-    set(EIGEN3_VERSION_OK FALSE)
-  else(${EIGEN3_VERSION} VERSION_LESS ${Eigen3_FIND_VERSION})
-    set(EIGEN3_VERSION_OK TRUE)
-  endif(${EIGEN3_VERSION} VERSION_LESS ${Eigen3_FIND_VERSION})
-
-  if(NOT EIGEN3_VERSION_OK)
-
-    message(STATUS "Eigen3 version ${EIGEN3_VERSION} found in ${EIGEN3_INCLUDE_DIR}, "
-                   "but at least version ${Eigen3_FIND_VERSION} is required")
-  endif(NOT EIGEN3_VERSION_OK)
-endmacro(_eigen3_check_version)
-
-if (EIGEN3_INCLUDE_DIR)
-
-  # in cache already
-  _eigen3_check_version()
-  set(EIGEN3_FOUND ${EIGEN3_VERSION_OK})
-
-else (EIGEN3_INCLUDE_DIR)
-
-  find_path(EIGEN3_INCLUDE_DIR NAMES signature_of_eigen3_matrix_library
-      PATHS
-      ${CMAKE_INSTALL_PREFIX}/include
-      ${KDE4_INCLUDE_DIR}
-      PATH_SUFFIXES eigen3 eigen
-    )
-
-  if(EIGEN3_INCLUDE_DIR)
-    _eigen3_check_version()
-  endif(EIGEN3_INCLUDE_DIR)
-
-  include(FindPackageHandleStandardArgs)
-  find_package_handle_standard_args(Eigen3 DEFAULT_MSG EIGEN3_INCLUDE_DIR EIGEN3_VERSION_OK)
-
-  mark_as_advanced(EIGEN3_INCLUDE_DIR)
-
-endif(EIGEN3_INCLUDE_DIR)
-
diff --git a/src/formats/formats.cmake b/src/formats/formats.cmake
index c94c8def2..bd08b17fb 100644
--- a/src/formats/formats.cmake
+++ b/src/formats/formats.cmake
@@ -21,7 +21,7 @@ set(formats_utility
   )
 set(painterformat_additional_sources ../depict/commandpainter.cpp)
 set(asciiformat_additional_sources   ../depict/asciipainter.cpp)
-if(EIGEN2_FOUND OR EIGEN3_FOUND)
+if(EIGEN2_FOUND OR Eigen3_FOUND)
   set(formats_utility ${formats_utility}
       confabreport
      )
