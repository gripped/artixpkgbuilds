# Maintainer: Levente Polyak <anthraxx[at]archlinux[dot]org>
# Maintainer: Andreas 'Segaja' Schleifer <segaja at archlinux dot org>

pkgbase=unicorn
pkgname=(unicorn python-unicorn ruby-unicorn-engine)
pkgver=2.1.3
pkgrel=3
pkgdesc='Lightweight, multi-platform, multi-architecture CPU emulator framework based on QEMU'
url='https://www.unicorn-engine.org'
arch=(x86_64)
license=(GPL-2.0-only)
makedepends=(
  cmake
  git
  python
  python-build
  python-installer
  python-setuptools
  python-setuptools-scm
  python-versioningit
  python-wheel
  ruby
  ruby-rdoc
)
checkdepends=(
  cmocka
  python-pytest
)
options=('!emptydirs')
source=(
  git+https://github.com/unicorn-engine/unicorn.git#tag=v${pkgver}
  bindings-ruby-fix-unexpected-uc_query-result-pointer.patch
)
sha512sums=('7b877178bdb0c620cfa629ea1f8983d67e8d006a3a0d36280ebdefbf7bc73f4ee7a0f7cda57ceb8be821dd7c294d999320acdfd44e2ea29d9840a55b85a6522e'
            '579700f4aad9c964c038f2ad77c8e26d0339dbfb96665f933d538a1f66e97486c02d671a41d996ab024ade2c8fdfc9c52c42e75fe368943fcbcac50019178ed2')
b2sums=('6ce4c68abeae5ff57f59541c10817d5e5746b31b8108d74be259cf8688e45d5ce281a27486f5a847c8a02522323d181abde73eb6359501228ac13a236fdcd191'
        '2b501cbe3ea0228b2727342c549bf54f01a72385f51e753c4ec03a2af223b19e729942ef9a5272c2677c11958b45fcd52022e84fae23599536d2d1288b290206')

export SETUPTOOLS_SCM_PRETEND_VERSION=${pkgver}

prepare() {
  cd ${pkgbase}
  patch -Np1 < ../bindings-ruby-fix-unexpected-uc_query-result-pointer.patch
  sed 's/VERSION =.*/VERSION = "'"${pkgver}"'"/' -i bindings/ruby/unicorn_gem/lib/unicorn_engine/version.rb
}

build() {
  cd ${pkgbase}
  export UNICORN_CFLAGS="${CFLAGS} -ffat-lto-objects"
  export UNICORN_QEMU_FLAGS="--extra-ldflags=\"$LDFLAGS\""
  export QEMU_CXXFLAGS="${CXXFLAGS}"
  export QEMU_LDFLAGS="${LDFLAGS}"
  cmake -B build \
      -DCMAKE_BUILD_TYPE=None \
      -DCMAKE_INSTALL_PREFIX=/usr \
      -DUNICORN_LEGACY_STATIC_ARCHIVE=OFF \
      -Wno-dev
  cmake --build build
  (cd bindings
    python const_generator.py python
    python const_generator.py ruby
  )
  (cd bindings/python
    # avoid rebuilding libunicorn.so
    env LIBUNICORN_PATH="/doesnotexist" python -m build --wheel --no-isolation
    env LIBUNICORN_PATH="/doesnotexist" python -m installer --destdir=tmp_install dist/*.whl
  )
  (cd bindings/ruby/unicorn_gem
    gem build unicorn-engine.gemspec
  )
}

check() {
  cd ${pkgbase}
  ctest --test-dir build --output-on-failure
  cd bindings/python
  local site_packages=$(python -c "import site; print(site.getsitepackages()[0])")
  export LD_LIBRARY_PATH=$PWD/../../build/
  export PYTHONPATH="$PWD/tmp_install/$site_packages"
  py.test -k 'not test_network_auditing and not test_shellcode.py'
  ./tests/test_shellcode.py
  ./tests/test_network_auditing.py
}

package_unicorn() {
  depends=(
    glibc
  )
  provides=(libunicorn.so)
  cd ${pkgbase}
  DESTDIR="${pkgdir}" cmake --install build
  install -Dm 644 samples/*.c -t "${pkgdir}/usr/share/doc/${pkgname}/samples"
}

package_python-unicorn() {
  depends=(
    unicorn
    python
    python-setuptools
  )
  cd ${pkgbase}/bindings/python
  python -m installer --destdir="${pkgdir}" dist/*.whl
}

package_ruby-unicorn-engine() {
  depends=(
    glibc
    unicorn
    ruby
  )
  replaces=('ruby-unicorn')
  cd ${pkgbase}/bindings/ruby/unicorn_gem

  local _gemdir="$(gem env gemdir)"
  gem install \
    --local \
    --verbose \
    --ignore-dependencies \
    --no-user-install \
    --install-dir "${pkgdir}${_gemdir}" \
    --bindir "${pkgdir}/usr/bin" \
    ${pkgbase}-*.gem -- \
    --with-opt-include="${srcdir}/${pkgbase}/include" \
    --with-opt-lib="${srcdir}/${pkgbase}/build"

  install -Dm 644 ../sample* -t "${pkgdir}/usr/share/doc/${pkgname}/samples"

  # remove unrepreducible files
  rm --force --recursive --verbose \
    "${pkgdir}/${_gemdir}/cache/" \
    "${pkgdir}/${_gemdir}/gems/${_gemname}-${pkgver}/vendor/" \
    "${pkgdir}/${_gemdir}/doc/${_gemname}-${pkgver}/ri/ext/"

  find "${pkgdir}/${_gemdir}/gems/" \
    -type f \
    \( \
      -iname "*.o" -o \
      -iname "*.c" -o \
      -iname "*.so" -o \
      -iname "*.time" -o \
      -iname "gem.build_complete" -o \
      -iname "Makefile" \
    \) \
    -delete

  find "${pkgdir}/${_gemdir}/extensions/" \
    -type f \
    \( \
      -iname "mkmf.log" -o \
      -iname "gem_make.out" \
    \) \
    -delete
}

# vim: ts=2 sw=2 et:
