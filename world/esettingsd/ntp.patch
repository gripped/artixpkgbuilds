Disable openrc-integrated NTP services

diff --git a/src/main.c b/src/main.c
index 7d9444e..7bfbf7d 100644
--- a/src/main.c
+++ b/src/main.c
@@ -56,8 +56,8 @@ static GOptionEntry option_entries[] =
     { "debug", 0, 0, G_OPTION_ARG_NONE, &debug, "Enable debugging messages", NULL },
     { "read-only", 0, 0, G_OPTION_ARG_NONE, &read_only, "Run in read-only mode", NULL },
     { "syslog", 0, 0, G_OPTION_ARG_NONE, &use_syslog, "Log to syslog", NULL },
-    { "ntp-service", 0, 0, G_OPTION_ARG_STRING, &ntp_preferred_service, "Preferred rc NTP service for timedated", NULL },
 #if HAVE_OPENRC
+    { "ntp-service", 0, 0, G_OPTION_ARG_STRING, &ntp_preferred_service, "Preferred rc NTP service for timedated", NULL },
     { "update-rc-status", 0, 0, G_OPTION_ARG_NONE, &update_rc_status, "Force openrc-settingsd rc service to be marked as started", NULL },
 #endif
     { "version", 0, 0, G_OPTION_ARG_NONE, &print_version, "Show version information", NULL },
@@ -158,6 +158,7 @@ openrc_settingsd_exit (int status)
 void
 openrc_settingsd_component_started ()
 {
+    const gchar *rfd = NULL;
     gchar *pidstring = NULL;
     GError *err = NULL;
 
@@ -189,7 +190,7 @@ main (gint argc, gchar *argv[])
 
     g_log_set_default_handler (log_handler, NULL);
 
-    option_context = g_option_context_new ("- system settings D-Bus service for OpenRC");
+    option_context = g_option_context_new ("- system settings D-Bus service");
     g_option_context_add_main_entries (option_context, option_entries, NULL);
     if (!g_option_context_parse (option_context, &argc, &argv, &error)) {
         g_critical ("Failed to parse options: %s", error->message);
diff --git a/src/timedated.c b/src/timedated.c
index 78c6035..2e6c818 100644
--- a/src/timedated.c
+++ b/src/timedated.c
@@ -58,9 +58,10 @@ gchar *timezone_name = NULL;
 G_LOCK_DEFINE_STATIC (clock);
 
 gboolean use_ntp = FALSE;
+#if HAVE_OPENRC
 static const gchar *ntp_preferred_service = NULL;
 static const gchar *ntp_default_services[] = { "ntpd", "chronyd", "busybox-ntpd", NULL };
-#define NTP_DEFAULT_SERVICES_PACKAGES "ntp, openntpd, chrony, busybox-ntpd"
+#endif
 G_LOCK_DEFINE_STATIC (ntp);
 
 static gboolean
@@ -628,8 +629,7 @@ on_handle_set_ntp_authorized_cb (GObject *source_object,
     G_LOCK (ntp);
     if (ntp_service () == NULL) {
         g_dbus_method_invocation_return_dbus_error (data->invocation, DBUS_ERROR_FAILED,
-                                                    "No ntp implementation found. Please install one of the following packages: "
-                                                    NTP_DEFAULT_SERVICES_PACKAGES);
+                                                    "No ntp implementation found.");
         goto unlock;
     }
     if ((data->use_ntp && !service_enable (ntp_service (), &err)) ||
@@ -734,7 +734,11 @@ timedated_init (gboolean _read_only,
     GError *err = NULL;
 
     read_only = _read_only;
+#if HAVE_OPENRC
     ntp_preferred_service = _ntp_preferred_service;
+#else
+    (void)_ntp_preferred_service;
+#endif
 
     hwclock_file = g_file_new_for_path (SYSCONFDIR "/hwclock.conf");
     timezone_file = g_file_new_for_path (SYSCONFDIR "/timezone");
@@ -751,7 +755,7 @@ timedated_init (gboolean _read_only,
         g_clear_error (&err);
     }
     if (ntp_service () == NULL) {
-        g_warning ("No ntp implementation found. Please install one of the following packages: " NTP_DEFAULT_SERVICES_PACKAGES);
+        g_warning ("No ntp implementation found.");
         use_ntp = FALSE;
     } else {
         use_ntp = service_started (ntp_service (), &err);
@@ -777,7 +781,9 @@ timedated_destroy (void)
     g_bus_unown_name (bus_id);
     bus_id = 0;
     read_only = FALSE;
+#if HAVE_OPENRC
     ntp_preferred_service = NULL;
+#endif
 
     g_object_unref (hwclock_file);
     g_object_unref (timezone_file);
