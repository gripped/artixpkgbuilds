# Maintainer: Cory Sanin <corysanin@artixlinux.org>
# Contributor: Felix Yan <felixonmars@archlinux.org>

pkgname=ruby-protocol-http1
pkgver=0.30.0
pkgrel=1
pkgdesc='A low level implementation of the HTTP/1 protocol'
arch=(any)
url='https://github.com/socketry/protocol-http1'
license=(MIT)
depends=(
  ruby
  ruby-protocol-http
)
makedepends=(
  ruby-rdoc
)
checkdepends=(
  ruby-bake-modernize
  ruby-bake-test
  ruby-bake-test-external
  ruby-bundler
  ruby-covered
  ruby-decode
  ruby-sus
)
options=(!emptydirs)
source=(https://github.com/socketry/protocol-http1/archive/v$pkgver/$pkgname-$pkgver.tar.gz)
sha512sums=('44168c223c92fb2fca30ae07bceb01c153efb45769ec535b2d9ee0de2d87891b5f82dd501ba83dc4d989a91dd204a9eda8c0670168b9411b79cf49abb54f4610')
b2sums=('c0593782f42cc315ad8e662d3e30a8bed3545674d925389c06351d3fa5b61e8798491356adbcaf8165815d26e8293acc5e9ccf7d614dad81c0c15414233aeb19')

prepare() {
  cd protocol-http1-$pkgver

  sed -r \
    -e 's|~>|>=|g' \
    -e '/signing_key/d' \
    -i protocol-http1.gemspec

  sed -i \
    -e '/bake-gem/d;/bake-github-pages/d;/utopia-project/d;s/gem "stringio".*$/gem "stringio"/' \
    -e '/rubocop/d' \
    gems.rb
}

build() {
  local _gemdir="$(gem env gemdir)"
  cd protocol-http1-$pkgver
  gem build protocol-http1.gemspec
  gem install \
    --local \
    --verbose \
    --ignore-dependencies \
    --no-user-install \
    --install-dir "tmp_install/$_gemdir" \
    --bindir "tmp_install/usr/bin" \
    protocol-http1-$pkgver.gem
  find "tmp_install/$_gemdir/gems/" \
    -type f \
    \( \
        -iname "*.o" -o \
        -iname "*.c" -o \
        -iname "*.so" -o \
        -iname "*.time" -o \
        -iname "gem.build_complete" -o \
        -iname "Makefile" \
    \) \
    -delete
  rm -r tmp_install/$_gemdir/cache
}

check() {
  local _gemdir="$(gem env gemdir)"
  cd protocol-http1-$pkgver
  GEM_HOME="tmp_install/$_gemdir" bake test
}

package() {
  cd protocol-http1-$pkgver
  cp -a tmp_install/* "$pkgdir"/
  install -Dm644 license.md -t "$pkgdir"/usr/share/licenses/$pkgname/
}
