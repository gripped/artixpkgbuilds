# Maintainer: Cory Sanin <corysanin@artixlinux.org>
# Contributor: Felix Yan <felixonmars@archlinux.org>

pkgname=ruby-protocol-http1
pkgver=0.28.1
pkgrel=1
pkgdesc='A low level implementation of the HTTP/1 protocol'
arch=(any)
url='https://github.com/socketry/protocol-http1'
license=(MIT)
depends=(
  ruby
  ruby-protocol-http
)
makedepends=(
  ruby-rdoc
)
checkdepends=(
  ruby-bake-modernize
  ruby-bake-test
  ruby-bake-test-external
  ruby-bundler
  ruby-covered
  ruby-decode
  ruby-sus
)
options=(!emptydirs)
source=(https://github.com/socketry/protocol-http1/archive/v$pkgver/$pkgname-$pkgver.tar.gz)
sha512sums=('ad3e8a4442593b9d765895254b42b7ea871a5eddae53b701b35f5ac19e334090edbbce795e3caadf69d082e15f46530605eb9b201a6f69ab9c1158332248ee34')
b2sums=('556ffd00d779da133a831f8754e4cbcdceae1db2803aeb3e496dec9ef2035659f417033e64060710d80f87c7ab7cfb70538da6b427a6327042ffd7e780dd9f34')

prepare() {
  cd protocol-http1-$pkgver

  sed -r \
    -e 's|~>|>=|g' \
    -e '/signing_key/d' \
    -i protocol-http1.gemspec

  sed -i \
    -e '/bake-gem/d;/bake-github-pages/d;/utopia-project/d;s/gem "stringio".*$/gem "stringio"/' \
    -e '/rubocop/d' \
    gems.rb
}

build() {
  local _gemdir="$(gem env gemdir)"
  cd protocol-http1-$pkgver
  gem build protocol-http1.gemspec
  gem install \
    --local \
    --verbose \
    --ignore-dependencies \
    --no-user-install \
    --install-dir "tmp_install/$_gemdir" \
    --bindir "tmp_install/usr/bin" \
    protocol-http1-$pkgver.gem
  find "tmp_install/$_gemdir/gems/" \
    -type f \
    \( \
        -iname "*.o" -o \
        -iname "*.c" -o \
        -iname "*.so" -o \
        -iname "*.time" -o \
        -iname "gem.build_complete" -o \
        -iname "Makefile" \
    \) \
    -delete
  rm -r tmp_install/$_gemdir/cache
}

check() {
  local _gemdir="$(gem env gemdir)"
  cd protocol-http1-$pkgver
  GEM_HOME="tmp_install/$_gemdir" bake test
}

package() {
  cd protocol-http1-$pkgver
  cp -a tmp_install/* "$pkgdir"/
  install -Dm644 license.md -t "$pkgdir"/usr/share/licenses/$pkgname/
}
