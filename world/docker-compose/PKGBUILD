# Maintainer: Cory Sanin <corysanin@artixlinux.org>
# Contributor: Andrew Crerar <crerar@archlinux.org>
# Contributor: Morten Linderud <foxboron@archlinux.org>
# Contributor: Felix Yan <felixonmars@archlinux.org>
# Contributor: Iwan Timmer <irtimmer@gmail.com>
# Contributor: Vincent Demeester <vincent@sbr.io>
# Contributor: Josh VanderLinden <arch@cloudlery.com>

pkgname=docker-compose
pkgver=2.40.2
pkgrel=1
pkgdesc="Fast, isolated development environments using Docker"
arch=('x86_64')
url="https://www.docker.com/"
license=("Apache-2.0")
makedepends=('go')
checkdepends=('docker')
source=("$pkgname-$pkgver.tar.gz::https://github.com/docker/compose/archive/v$pkgver.tar.gz"
        https://github.com/docker/compose/commit/6a90742ef29c392b6626b0ff3f50c6f28f944321.patch)
b2sums=('af20677a45461ad97f800322df5c002eebc0a81ee1077ee6ad2518b7455804a91536c099dbb5a27a8d6fc98e1d23381917987978dfb3ce4372c2b5efc709486f'
        '6f99d165455eb8f50932697e18804372468b099ff8685b73326a8b2edbb5315acfef49a06d2e6626cd57cefac612c9f2fa688c50122e8ee1921ad690b037698e')

prepare() {
  cd "compose-$pkgver"
  patch -Np1 -i ../6a90742ef29c392b6626b0ff3f50c6f28f944321.patch
}

build() {
  cd "compose-$pkgver"
  export CGO_CPPFLAGS="${CPPFLAGS}"
  export CGO_CFLAGS="${CFLAGS}"
  export CGO_CXXFLAGS="${CXXFLAGS}"
  export CGO_LDFLAGS="${LDFLAGS}"
  export GOPATH="${srcdir}"
  export GOFLAGS="-buildmode=pie -trimpath -mod=readonly -modcacherw"
  GO_LDFLAGS="-linkmode=external -compressdwarf=false -X=github.com/docker/compose/v2/internal.Version=${pkgver}"
  go build -ldflags "${GO_LDFLAGS}" -trimpath -tags "e2e,kube" -o compose ./cmd
}

check(){
  cd "compose-$pkgver"
  rm pkg/compose/ps_test.go
  go test -tags "e2e,kube" -v $(go list -tags "e2e,kube" ./... | grep -vE 'e2e')
}

package() {
  cd "compose-$pkgver"
  install -Dm644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE
  install -Dm755 compose "$pkgdir"/usr/lib/docker/cli-plugins/docker-compose
  install -d "$pkgdir/usr/bin"
  ln -sf /usr/lib/docker/cli-plugins/docker-compose "$pkgdir/usr/bin/docker-compose"
}
