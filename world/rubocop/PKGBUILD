# Maintainer: Cory Sanin <corysanin@artixlinux.org>
# Contributor: Andreas 'Segaja' Schleifer <segaja at archlinux dot org>

pkgname="rubocop"
pkgver=1.81.1
pkgrel=1
pkgdesc='A Ruby code style checking and code formatting tool'
arch=('any')
url='https://rubocop.org/'
license=('MIT')
provides=('ruby-rubocop')
depends=(
  ruby
  ruby-language_server-protocol
  ruby-lint_roller
  ruby-parallel
  ruby-parser
  ruby-rainbow
  ruby-regexp_parser
  ruby-rubocop-ast
  ruby-ruby-progressbar
  ruby-unicode-display_width
)
makedepends=(
  ruby-rdoc
)
checkdepends=(
  asciidoctor
  procps-ng
  ruby-bundler
  ruby-irb
  ruby-lsp
  ruby-memory_profiler
  ruby-rake
  ruby-rspec
  ruby-rubocop-performance
  ruby-rubocop-rake
  ruby-rubocop-rspec
  ruby-stackprof
  ruby-test-queue
  ruby-webmock
  ruby-yard
)
options=('!emptydirs')
source=(
  "https://github.com/rubocop/rubocop/archive/v${pkgver}/${pkgname}-${pkgver}.tar.gz"
)
sha512sums=('84afe8ad1f7ee8050658402ffaa88714ffbf85c742c23c8928c4ab09ec8ed485c8c1e4c283fc76c8d0a43f67317c8030bbba7e7c7220088894da2be06f9de61e')
b2sums=('e3386971a4b816f140e07e78c85589a6a1b59d932ac89ca0a8370abe25388b7fbb2716c7707d604c3dd0ad68cffdf21b569a61e5d83ef0397def521bb1abaa05')

prepare() {
  cd "${pkgname}-${pkgver}"

  # update gemspec/Gemfile to allow newer version of the dependencies
  sed --in-place --regexp-extended 's|~>|>=|g' "${pkgname}.gemspec" Gemfile

  # we need webmock
  sed --in-place \
    --expression '/group/d' \
    --expression '/end/d' \
    Gemfile

  sed --in-place --regexp-extended \
    --expression '/bump/d' \
    --expression '/simplecov/d' \
    Gemfile

  rm tasks/cut_release.rake
}

build() {
  cd "${pkgname}-${pkgver}"

  local _gemdir="$(gem env gemdir)"

  gem build "${pkgname}.gemspec"

  gem install \
    --local \
    --verbose \
    --ignore-dependencies \
    --no-user-install \
    --install-dir "tmp_install/${_gemdir}" \
    --bindir "tmp_install/usr/bin" \
    "${pkgname}-${pkgver}.gem"

  # remove unrepreducible files
  rm --force --recursive --verbose \
    "tmp_install/${_gemdir}/cache/" \
    "tmp_install/${_gemdir}/gems/${pkgname}-${pkgver}/vendor/" \
    "tmp_install/${_gemdir}/doc/${pkgname}-${pkgver}/ri/ext/"

  find "tmp_install/${_gemdir}/gems/" \
    -type f \
    \( \
      -iname "*.o" -o \
      -iname "*.c" -o \
      -iname "*.so" -o \
      -iname "*.time" -o \
      -iname "gem.build_complete" -o \
      -iname "Makefile" \
    \) \
    -delete

  find "tmp_install/${_gemdir}/extensions/" \
    -type f \
    \( \
      -iname "mkmf.log" -o \
      -iname "gem_make.out" \
    \) \
    -delete
}

check() {
  cd "${pkgname}-${pkgver}"

  local _gemdir="$(gem env gemdir)"

  GEM_HOME="tmp_install/${_gemdir}" rake ascii_spec spec
}

package() {
  cd "${pkgname}-${pkgver}"

  cp --archive --verbose tmp_install/* "${pkgdir}"

  install --verbose -D --mode=0644 LICENSE.txt "${pkgdir}/usr/share/licenses/${pkgname}/LICENSE"
  install --verbose -D --mode=0644 *.md --target-directory "${pkgdir}/usr/share/doc/${pkgname}"
}

# vim: tabstop=2 shiftwidth=2 expandtab:
