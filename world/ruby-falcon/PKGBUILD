# Maintainer: Cory Sanin <corysanin@artixlinux.org>
# Contributor: Felix Yan <felixonmars@archlinux.org>

_gemname='falcon'
pkgname="ruby-${_gemname}"
pkgver=0.48.3
pkgrel=1
pkgdesc='A fast, asynchronous, rack-compatible web server'
arch=(any)
url='https://github.com/socketry/falcon'
license=(MIT)
depends=(
  ruby
  ruby-async
  ruby-async-container
  ruby-async-http
  ruby-async-http-cache
  ruby-async-service
  ruby-bundler
  ruby-localhost
  ruby-process-metrics
  ruby-protocol-http
  ruby-protocol-rack
  ruby-samovar
)
makedepends=(
  ruby-rdoc
)
checkdepends=(
  ruby-async-process
  ruby-async-websocket
  ruby-bake
  ruby-bake-test
  ruby-bake-test-external
  ruby-covered
  ruby-decode
  ruby-puma
  ruby-rackup
  ruby-sus
  ruby-sus-fixtures-async
  ruby-sus-fixtures-async-http
  ruby-sus-fixtures-openssl
)
options=(!emptydirs)
source=("${url}/archive/v$pkgver/$pkgname-$pkgver.tar.gz")
sha512sums=('1a3caf31c75328f17d5b12422e5892c040a724fd67ce4e7cc6ef2d0c991c33ed2b70ab42802fc48d93e3651b2ee87f77a5d60b658f6499bcf2511c4bd5debe7f')
b2sums=('7230d00241a553cd3c11fefd75d0a8953dffc2130ee2927f171339b21a33be7a837c1e2cac8d1140e94c4ac1d351048d651a4c137e889a85e615f5939683203b')

prepare() {
  cd "${_gemname}-${pkgver}"

  sed --in-place --regexp-extended \
    --expression 's|~>|>=|g' \
    --expression '/signing_key/d' \
    falcon.gemspec

  sed --in-place \
    --expression '/group :maintenance/,/end/d' \
    --expression '/group :development/,/end/d' \
    --expression '/rubocop/d' \
    gems.rb
}

build() {
  cd "${_gemname}-${pkgver}"

  local _gemdir="$(gem env gemdir)"

  gem build --verbose "${_gemname}.gemspec"

  gem install \
    --local \
    --verbose \
    --ignore-dependencies \
    --no-user-install \
    --install-dir "tmp_install${_gemdir}" \
    --bindir "tmp_install/usr/bin" \
    "${_gemname}-${pkgver}.gem"

  # remove unreproducible files
  rm --force --recursive --verbose \
    tmp_install/usr/bin/*.lock \
    "tmp_install${_gemdir}/cache/" \
    "tmp_install${_gemdir}/gems/${_gemname}-${pkgver}/vendor/" \
    "tmp_install${_gemdir}/doc/${_gemname}-${pkgver}/ri/ext/"

  find "tmp_install${_gemdir}/gems/" \
    -type f \
    \( \
      -iname "*.o" -o \
      -iname "*.c" -o \
      -iname "*.so" -o \
      -iname "*.time" -o \
      -iname "gem.build_complete" -o \
      -iname "Makefile" \
    \) \
    -delete

  find "tmp_install${_gemdir}/extensions/" \
    -type f \
    \( \
      -iname "mkmf.log" -o \
      -iname "gem_make.out" \
    \) \
    -delete
}


package() {
  cd "${_gemname}-${pkgver}"

  cp --archive --verbose tmp_install/* "${pkgdir}"

  install --verbose -D --mode=0644 license.md --target-directory "${pkgdir}/usr/share/licenses/${pkgname}"
  install --verbose -D --mode=0644 *.md --target-directory "${pkgdir}/usr/share/doc/${pkgname}"
}

# vim: tabstop=2 shiftwidth=2 expandtab:
