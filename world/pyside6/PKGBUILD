# Maintainer: Antonio Rojas <arojas@archlinux.org>
# Maintainer: Felix Yan <felixonmars@archlinux.org>

pkgbase=pyside6
pkgname=(pyside6
         pyside6-tools
         shiboken6)
pkgver=6.10.0
pkgrel=3
arch=(x86_64)
url='https://www.qt.io'
license=(GPL-3.0-only
         LGPL-3.0-only
         LicenseRef-Qt-Commercial
         Qt-GPL-exception-1.0)
makedepends=(clang
             cmake
             git
             llvm
             ninja
             python-numpy
             python-setuptools
             qt6-3d
             qt6-charts
             qt6-connectivity
             qt6-datavis3d
             qt6-graphs
             qt6-httpserver
             qt6-location
             qt6-multimedia
             qt6-networkauth
             qt6-positioning
             qt6-quick3d
             qt6-remoteobjects
             qt6-scxml
             qt6-sensors
             qt6-serialbus
             qt6-serialport
             qt6-shadertools
             qt6-speech
             qt6-svg
             qt6-tools
             qt6-webchannel
             qt6-webengine
             qt6-websockets)
source=(git+https://code.qt.io/pyside/pyside-setup#tag=v$pkgver
        fix-header-install-dir.patch)
sha256sums=('e662a37c7f3f416d896501df07ad99103df5758a07c19f0c5493f96c199046d7'
            '3bc87409ea3dc41847f1d5d7612fd97931b67f1b40510b465543a8ef5c9764ff')

prepare() {
  cd pyside-setup
  git revert -n 05e328476f2d6ef8a0f3f44aca1e5b1cdb7499fc # Revert broken cmake files
  patch -p1 -i ../fix-header-install-dir.patch # Revert broken header install dir
}

build() {
  cmake -B build -S pyside-setup -G Ninja \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_BUILD_TYPE=None \
    -DSHIBOKEN_PYTHON_LIBRARIES=`pkgconf python3-embed --libs` \
    -DBUILD_TESTS=OFF \
    -DFORCE_LIMITED_API=no \
    -DNO_QT_TOOLS=yes
  PYTHONPATH="$PWD"/build/sources \
  cmake --build build
}

package_shiboken6() {
  pkgdesc='Generates bindings for C++ libraries using CPython source code'
  depends=(clang
           gcc-libs
           glibc
           libxml2
           libxslt
           llvm
           python
           qt6-base)
  optdepends=('python: Python bindings')

  DESTDIR="$pkgdir" cmake --install build/sources/shiboken6

# Install egg-info
  export PATH="/usr/lib/qt6/bin:$PATH"
  cd pyside-setup
  python setup.py egg_info --build-type=shiboken6
  python setup.py egg_info --build-type=shiboken6-generator
  _pythonpath=`python -c "from sysconfig import get_path; print(get_path('platlib'))"`
  cp -r shiboken6*.egg-info "$pkgdir"/$_pythonpath
}

package_pyside6() {
  pkgdesc='Enables the use of Qt6 APIs in Python applications'
  depends=(gcc-libs
           glibc
           python
           qt6-base
           qt6-declarative
           shiboken6)
  optdepends=('qt6-3d: Qt3D bindings'
              'qt6-charts: QtCharts bindings'
              'qt6-connectivity: QtBluetooth and QtNfc bindings'
              'qt6-datavis3d: QtDataVisualization bindings'
              'qt6-graphs: QtGraphs bindings'
              'qt6-httpserver: QtHttpServer bindings'
              'qt6-location: QtLocation bindings'
              'qt6-multimedia: QtMultimedia bindings'
              'qt6-networkauth: QtNetworkAuth bindings'
              'qt6-positioning: QtPositioning bindings'
              'qt6-quick3d: QtQuick3D bindings'
              'qt6-remoteobjects: QtRemoteObjects bindings'
              'qt6-scxml: QtScxml bindings'
              'qt6-sensors: QtSensors bindings'
              'qt6-serialbus: QtSerialBus bindings'
              'qt6-serialport: QtSerialPort bindings'
              'qt6-speech: QtTextToSpeech bindings'
              'qt6-svg: QtSvg bindings'
              'qt6-tools: QtHelp, QtUiTools bindings'
              'qt6-webchannel: QtWebChannel bindings'
              'qt6-webengine: QtWebEngine bindings'
              'qt6-websockets: QtWebSockets bindings')
  provides=(qt6-python-bindings)

  DESTDIR="$pkgdir" cmake --install build/sources/pyside6

# Install egg-info
  export PATH="/usr/lib/qt6/bin:$PATH"
  cd pyside-setup
  python setup.py egg_info --build-type=pyside6
  _pythonpath=`python -c "from sysconfig import get_path; print(get_path('platlib'))"`
  cp -r PySide6.egg-info "$pkgdir"/$_pythonpath
}

package_pyside6-tools() {
  pkgdesc='Tools for pyside6'
  depends=(pyside6
           python)

  DESTDIR="$pkgdir" cmake --install build/sources/pyside-tools

# Add convenience pyside6-designer wrapper
# Entry points in /usr/bin are not installed in the cmake build. This is the only one that does anything besides wrapping the Qt executable
  echo "export LD_PRELOAD="`python -c "from sysconfig import get_config_var; print(get_config_var('LDLIBRARY'))"` > pyside6-designer
  echo "exec designer6 \$@" >> pyside6-designer
  install -Dm755 pyside6-designer -t "$pkgdir"/usr/bin
}

