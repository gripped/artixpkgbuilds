# Maintainer: Robin Candau <antiz@archlinux.org>
# Contributor: Mark Wagie <mark dot wagie at proton dot me>

pkgname=fastfetch
pkgver=2.31.0
pkgrel=1
pkgdesc="A feature-rich and performance oriented neofetch like system information tool"
arch=('x86_64')
url="https://github.com/fastfetch-cli/fastfetch"
license=('MIT')
depends=('glibc' 'yyjson')
makedepends=(
  'chafa'
  'cmake'
  'dbus'
  'dconf'
  'ddcutil'
  'directx-headers'
  'imagemagick'
  'libpulse'
  'libxcb'
  'libxrandr'
  'mesa'
  'ocl-icd'
  'opencl-headers'
  'vulkan-headers'
  'vulkan-icd-loader'
  'wayland'
  'xfconf'
  'zlib'
)
optdepends=(
  'chafa: Image output as ascii art'
  'dbus: Bluetooth, Player & Media detection'
  'dconf: Needed for values that are only stored in DConf + Fallback for GSettings'
  'ddcutil: Brightness detection of external displays'
  'directx-headers: GPU detection in WSL'
  'glib2: Output for values that are only stored in GSettings'
  'hwdata: GPU output'
  'imagemagick: Image output using sixel or kitty graphics protocol'
  'libdrm: Displays detection'
  'libelf: st term font detection and fast path of systemd version detection'
  'libpulse: Sound detection'
  'libxrandr: Multi monitor support'
  'mesa: Needed by the OpenGL module for gl context creation.'
  'ocl-icd: OpenCL module'
  'python: Needed for zsh and fish completions'
  'vulkan-icd-loader: Vulkan module & fallback for GPU output'
  'xfconf: Needed for XFWM theme and XFCE Terminal font'
  'zlib: Faster image output when using kitty graphics protocol'
)
source=("${pkgname}-${pkgver}.tar.gz::${url}/archive/refs/tags/${pkgver}.tar.gz")
sha256sums=('3036e34acc1355bf39619df1a2400f5f8316d188088f07d9a366a521bb30ad61')

build() {
	cmake -B build -S "${pkgname}-${pkgver}" \
		-DCMAKE_BUILD_TYPE='RelWithDebInfo' \
		-DCMAKE_INSTALL_PREFIX='/usr' \
		-DBUILD_TESTS='ON' \
		-DENABLE_SQLITE3='OFF' \
		-DENABLE_RPM='OFF' \
		-DENABLE_IMAGEMAGICK6='OFF' \
		-DENABLE_SYSTEM_YYJSON='ON' \
		-DPACKAGES_DISABLE_APK='ON' \
		-DPACKAGES_DISABLE_DPKG='ON' \
		-DPACKAGES_DISABLE_EMERGE='ON' \
		-DPACKAGES_DISABLE_EOPKG='ON' \
		-DPACKAGES_DISABLE_GUIX='ON' \
		-DPACKAGES_DISABLE_LINGLONG='ON' \
		-DPACKAGES_DISABLE_LPKG='ON' \
		-DPACKAGES_DISABLE_LPKGBUILD='ON' \
		-DPACKAGES_DISABLE_OPKG='ON' \
		-DPACKAGES_DISABLE_PACSTALL='ON' \
		-DPACKAGES_DISABLE_PALUDIS='ON' \
		-DPACKAGES_DISABLE_PKG='ON' \
		-DPACKAGES_DISABLE_PKGTOOL='ON' \
		-DPACKAGES_DISABLE_RPM='ON' \
		-DPACKAGES_DISABLE_SORCERY='ON' \
		-DPACKAGES_DISABLE_XBPS='ON' \
		-Wno-dev
	cmake --build build
}

check() {
	ctest --test-dir build --output-on-failure
}

package() {
	DESTDIR="${pkgdir}" cmake --install build
}
